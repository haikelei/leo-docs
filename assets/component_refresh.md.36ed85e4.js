import{_ as e,c as s,o as l,N as t}from"./chunks/framework.fc67cb9d.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"component/refresh.md","lastUpdated":1685603474000}'),a={name:"component/refresh.md"},o=t(`<h4 id="refresh" tabindex="-1">refresh <a class="header-anchor" href="#refresh" aria-label="Permalink to &quot;refresh&quot;">​</a></h4><p>app端nvue专用组件。</p><p><code>&lt;refresh&gt;</code> 为容器提供下拉刷新功能。在nvue上，可通过此组件实现灵活的、自定义的、高性能的下拉刷新。</p><blockquote><p>注意</p><ul><li><code>&lt;refresh&gt;</code> 是 <code>&lt;scroll-view&gt;</code>、<code>&lt;list&gt;</code>、<code>&lt;waterfall&gt;</code> 的子组件，只能在被它们包含时才能被正确渲染。</li></ul></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;scroll-view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;refresh&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;text&gt;Refreshing...&lt;/text&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/refresh&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;view v-for=&quot;num in lists&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;text&gt;{{num}}&lt;/text&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/scroll-view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="子组件" tabindex="-1">子组件 <a class="header-anchor" href="#子组件" aria-label="Permalink to &quot;子组件&quot;">​</a></h4><ul><li>诸如 <code>&lt;text&gt;</code>、<code>&lt;image&gt;</code> 之类的任何组件，都可以放到 <code>&lt;loading&gt;</code> 进行渲染。</li><li>特殊子组件 <code>&lt;loading-indicator&gt;</code>: 只能作为 <code>&lt;refresh&gt;</code> 和 <code>&lt;loading&gt;</code> 的子组件使用，拥有默认的动画效果实现。</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;refresh&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;text&gt;Refreshing&lt;/text&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;loading-indicator&gt;&lt;/loading-indicator&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/refresh&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h4><p><code>display</code> 控制 <code>&lt;refresh&gt;</code> 组件显示、隐藏。<code>display</code> 的设置必须成对出现，即设置 <code>display=&quot;show&quot;</code>, 必须有对应的 <code>display=&quot;hide&quot;</code>。可选值为 <code>show / hide</code>，默认值为 <code>show</code>。</p><h4 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h4><ul><li>refresh 事件：当 <code>&lt;scroll-view&gt;</code>、<code>&lt;list&gt;</code>、<code>&lt;waterfall&gt;</code> 被下拉完成时触发。</li><li>pullingdown 事件：当 <code>&lt;scroll-view&gt;</code>、<code>&lt;list&gt;</code>、<code>&lt;waterfall&gt;</code> 被下拉时触发。 可以从 <code>event</code> 参数对象中获取以下数据： <ul><li><code>dy</code>: 前后两次回调滑动距离的差值</li><li><code>pullingDistance</code>: 下拉的距离</li><li><code>viewHeight</code>: refresh 组件高度</li><li><code>type</code>: “pullingdown” 常数字符串</li></ul></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;refresh @refresh=&quot;onrefresh&quot; @pullingdown=&quot;onpullingdown&quot; :display=&quot;refreshing ? &#39;show&#39; : &#39;hide&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;text&gt;Refreshing ...&lt;/text&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;loading-indicator&gt;&lt;/loading-indicator&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/refresh&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,13),n=[o];function c(i,p,r,d,g,h){return l(),s("div",null,n)}const A=e(a,[["render",c]]);export{C as __pageData,A as default};
