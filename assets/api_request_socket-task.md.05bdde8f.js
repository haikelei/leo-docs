import{_ as t,c as e,o as l,N as a}from"./chunks/framework.fc67cb9d.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/request/socket-task.md","lastUpdated":1685603474000}'),s={name:"api/request/socket-task.md"},d=a('<p><strong>SocketTask</strong> 由 <a href="/leo-docs/api/request/websocket.html?id=connectsocket">uni.connectSocket()</a> 接口创建。</p><p><strong>平台差异说明</strong></p><p>支付宝小程序、字节跳动小程序，没有明确的文档来具体说明这个对象，而是指向了 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket" target="_blank" rel="noreferrer">Web Websocket</a> 对象。</p><h3 id="sockettask-onmessage-callback" tabindex="-1">SocketTask.onMessage(CALLBACK) <a class="header-anchor" href="#sockettask-onmessage-callback" aria-label="Permalink to &quot;SocketTask.onMessage(CALLBACK)&quot;">​</a></h3><p>监听 WebSocket 接受到服务器的消息事件</p><p><strong>回调函数</strong></p><p><code>Function</code></p><p>WebSocket 接受到服务器的消息事件的回调函数</p><p><strong>回调函数中的参数</strong></p><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">data</td><td style="text-align:left;">String/ArrayBuffer</td><td style="text-align:left;">服务器返回的消息</td></tr></tbody></table><h3 id="sockettask-send-object" tabindex="-1">SocketTask.send(OBJECT) <a class="header-anchor" href="#sockettask-send-object" aria-label="Permalink to &quot;SocketTask.send(OBJECT)&quot;">​</a></h3><p>通过 WebSocket 连接发送数据</p><p><strong>参数</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">data</td><td style="text-align:left;">String/ArrayBuffer</td><td style="text-align:left;">是</td><td style="text-align:left;">需要发送的内容</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用成功的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="sockettask-close-object" tabindex="-1">SocketTask.close(OBJECT) <a class="header-anchor" href="#sockettask-close-object" aria-label="Permalink to &quot;SocketTask.close(OBJECT)&quot;">​</a></h3><p>关闭 WebSocket 连接</p><p><strong>参数</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">是否必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">code</td><td style="text-align:left;">Number</td><td style="text-align:left;">1000（表示正常关闭连接）</td><td style="text-align:left;">否</td><td style="text-align:left;">一个数字值表示关闭连接的状态号，表示连接被关闭的原因。</td></tr><tr><td style="text-align:left;">reason</td><td style="text-align:left;">String</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">一个可读的字符串，表示连接被关闭的原因。</td></tr><tr><td style="text-align:left;">success</td><td style="text-align:left;">Function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用成功的回调函数</td></tr><tr><td style="text-align:left;">fail</td><td style="text-align:left;">Function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用失败的回调函数</td></tr><tr><td style="text-align:left;">complete</td><td style="text-align:left;">Function</td><td style="text-align:left;"></td><td style="text-align:left;">否</td><td style="text-align:left;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h3 id="sockettask-onopen-callback" tabindex="-1">SocketTask.onOpen(CALLBACK) <a class="header-anchor" href="#sockettask-onopen-callback" aria-label="Permalink to &quot;SocketTask.onOpen(CALLBACK)&quot;">​</a></h3><p>监听 WebSocket 连接打开事件</p><p><strong>回调函数</strong></p><p><code>Function</code></p><p>WebSocket 连接打开事件的回调函数</p><p><strong>回调函数中的参数</strong></p><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">data</td><td style="text-align:left;">String/ArrayBuffer</td><td style="text-align:left;">服务器返回的消息</td></tr></tbody></table><h3 id="sockettask-onclose-callback" tabindex="-1">SocketTask.onClose(CALLBACK) <a class="header-anchor" href="#sockettask-onclose-callback" aria-label="Permalink to &quot;SocketTask.onClose(CALLBACK)&quot;">​</a></h3><p>监听 WebSocket 连接关闭事件</p><p><strong>回调函数</strong></p><p><code>Function</code></p><p>WebSocket 连接关闭事件的回调函数</p><p><strong>回调函数中的参数</strong></p><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台兼容性</th></tr></thead><tbody><tr><td style="text-align:left;">code</td><td style="text-align:left;">number</td><td style="text-align:left;">一个数字值表示关闭连接的状态号，表示连接被关闭的原因。</td><td style="text-align:left;">HBuilderX(3.7.12+)</td></tr><tr><td style="text-align:left;">reason</td><td style="text-align:left;">string</td><td style="text-align:left;">一个可读的字符串，表示连接被关闭的原因。</td><td style="text-align:left;">HBuilderX(3.7.12+)</td></tr></tbody></table><h3 id="sockettask-onerror-callback" tabindex="-1">SocketTask.onError(CALLBACK) <a class="header-anchor" href="#sockettask-onerror-callback" aria-label="Permalink to &quot;SocketTask.onError(CALLBACK)&quot;">​</a></h3><p>监听 WebSocket 错误事件</p><p><strong>回调函数</strong></p><p><code>Function</code></p><p>WebSocket 错误事件的回调函数</p><p><strong>回调函数中的参数</strong></p><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">errMsg</td><td style="text-align:left;">String</td><td style="text-align:left;">错误信息</td></tr></tbody></table>',43),n=[d];function o(r,c,i,g,f,h){return l(),e("div",null,n)}const k=t(s,[["render",o]]);export{x as __pageData,k as default};
