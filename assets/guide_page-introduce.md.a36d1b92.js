import{_ as s,c as a,o as t,N as n}from"./chunks/framework.fc67cb9d.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/page-introduce.md","lastUpdated":1685603474000}'),l={name:"guide/page-introduce.md"},e=n(`<h2 id="页面简介" tabindex="-1">页面简介 <a class="header-anchor" href="#页面简介" aria-label="Permalink to &quot;页面简介&quot;">​</a></h2><p>uni-app项目中，一个页面就是一个符合<code>Vue SFC规范</code>的<code>.vue</code>文件。</p><h2 id="新建页面" tabindex="-1">新建页面 <a class="header-anchor" href="#新建页面" aria-label="Permalink to &quot;新建页面&quot;">​</a></h2><p><code>uni-app</code>中的页面，通常会保存在工程根目录下的<code>pages</code>目录下。</p><p>每次新建页面，均需在<code>pages.json</code>中配置<code>pages</code>列表；未在<code>pages.json -&gt; pages</code> 中配置的页面，<code>uni-app</code>会在编译阶段进行忽略。pages.json的完整配置参考：<a href="/leo-docs/collocation/pages.html">全局文件</a>。</p><h2 id="删除页面" tabindex="-1">删除页面 <a class="header-anchor" href="#删除页面" aria-label="Permalink to &quot;删除页面&quot;">​</a></h2><p>删除页面时，需做两件工作：</p><ul><li>删除<code>.vue</code>文件或<code>.nvue</code>文件</li><li>删除<code>pages.json -&gt; pages</code>列表项中的配置</li></ul><h2 id="应用首页" tabindex="-1">应用首页 <a class="header-anchor" href="#应用首页" aria-label="Permalink to &quot;应用首页&quot;">​</a></h2><p><code>uni-app</code>会将<code>pages.json -&gt; pages</code>配置项中的第一个页面，作为当前工程的首页（启动页）。</p><h2 id="页面生命周期-lifecycle" tabindex="-1">页面生命周期 @lifecycle <a class="header-anchor" href="#页面生命周期-lifecycle" aria-label="Permalink to &quot;页面生命周期 @lifecycle&quot;">​</a></h2><p><code>uni-app</code> 页面除支持 Vue 组件生命周期外还支持下方页面生命周期函数，当以组合式 API 使用时，在 Vue2 和 Vue3 中存在一定区别，请分别参考：<a href="/leo-docs/tutorial/vue-composition-api.html">Vue2 组合式 API 使用文档</a> 和 <a href="/leo-docs/tutorial/vue3-composition-api.html">Vue3 组合式 API 使用文档</a>。</p><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;">onInit</td><td style="text-align:left;">监听页面初始化，其参数同 onLoad 参数，为上个页面传递的数据，参数类型为 Object（用于页面传参），触发时机早于 onLoad</td><td style="text-align:left;">百度小程序</td><td style="text-align:left;">3.1.0+</td></tr><tr><td style="text-align:left;">onLoad</td><td style="text-align:left;">监听页面加载，其参数为上个页面传递的数据，参数类型为 Object（用于页面传参），参考<a href="/leo-docs/api/router.html?id=navigateto">示例</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onShow</td><td style="text-align:left;">监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onReady</td><td style="text-align:left;">监听页面初次渲染完成。注意如果渲染速度快，会在页面进入动画完成前触发</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onHide</td><td style="text-align:left;">监听页面隐藏</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onUnload</td><td style="text-align:left;">监听页面卸载</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onResize</td><td style="text-align:left;">监听窗口尺寸变化</td><td style="text-align:left;">App、微信小程序、快手小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onPullDownRefresh</td><td style="text-align:left;">监听用户下拉动作，一般用于下拉刷新，参考<a href="./api/ui/pulldown.html">示例</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onReachBottom</td><td style="text-align:left;">页面滚动到底部的事件（不是scroll-view滚到底），常用于下拉下一页数据。具体见下方注意事项</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onTabItemTap</td><td style="text-align:left;">点击 tab 时触发，参数为Object，具体见下方注意事项</td><td style="text-align:left;">微信小程序、QQ小程序、支付宝小程序、百度小程序、H5、App、快手小程序、京东小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onShareAppMessage</td><td style="text-align:left;">用户点击右上角分享</td><td style="text-align:left;">微信小程序、QQ小程序、支付宝小程序、字节小程序、飞书小程序、快手小程序、京东小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onPageScroll</td><td style="text-align:left;">监听页面滚动，参数为Object</td><td style="text-align:left;">nvue暂不支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onNavigationBarButtonTap</td><td style="text-align:left;">监听原生标题栏按钮点击事件，参数为Object</td><td style="text-align:left;">App、H5</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onBackPress</td><td style="text-align:left;">监听页面返回，返回 event = {from:backbutton、 navigateBack} ，backbutton 表示来源是左上角返回按钮或 android 返回键；navigateBack表示来源是 uni.navigateBack ；详细说明及使用：<a href="http://ask.dcloud.net.cn/article/35120" target="_blank" rel="noreferrer">onBackPress 详解</a>。支付宝小程序只有真机能触发，只能监听非navigateBack引起的返回，不可阻止默认行为。</td><td style="text-align:left;">app、H5、支付宝小程序</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputChanged</td><td style="text-align:left;">监听原生标题栏搜索输入框输入内容变化事件</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputConfirmed</td><td style="text-align:left;">监听原生标题栏搜索输入框搜索事件，用户点击软键盘上的“搜索”按钮时触发。</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onNavigationBarSearchInputClicked</td><td style="text-align:left;">监听原生标题栏搜索输入框点击事件（pages.json 中的 searchInput 配置 disabled 为 true 时才会触发）</td><td style="text-align:left;">App、H5</td><td style="text-align:left;">1.6.0</td></tr><tr><td style="text-align:left;">onShareTimeline</td><td style="text-align:left;">监听用户点击右上角转发到朋友圈</td><td style="text-align:left;">微信小程序</td><td style="text-align:left;">2.8.1+</td></tr><tr><td style="text-align:left;">onAddToFavorites</td><td style="text-align:left;">监听用户点击右上角收藏</td><td style="text-align:left;">微信小程序、QQ小程序</td><td style="text-align:left;">2.8.1+</td></tr></tbody></table><p><code>onInit</code>使用注意</p><ul><li>仅百度小程序基础库 3.260 以上支持 onInit 生命周期</li><li>其他版本或平台可以同时使用 onLoad 生命周期进行兼容，注意避免重复执行相同逻辑</li><li>不依赖页面传参的逻辑可以直接使用 created 生命周期替代</li></ul><p><code>onReachBottom</code>使用注意 可在pages.json里定义具体页面底部的触发距离<a href="/leo-docs/collocation/pages.html#globalstyle">onReachBottomDistance</a>，比如设为50，那么滚动页面到距离底部50px时，就会触发onReachBottom事件。</p><p>如使用scroll-view导致页面没有滚动，则触底事件不会被触发。scroll-view滚动到底部的事件请参考scroll-view的文档</p><p><code>onPageScroll</code> （监听滚动、滚动监听、滚动事件）参数说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>scrollTop</td><td>Number</td><td>页面在垂直方向已滚动的距离（单位px）</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><code>onPageScroll</code>里不要写交互复杂的js，比如频繁修改页面。因为这个生命周期是在渲染层触发的，在非h5端，js是在逻辑层执行的，两层之间通信是有损耗的。如果在滚动过程中，频发触发两层之间的数据交换，可能会造成卡顿。</li><li>如果想实现滚动时标题栏透明渐变，在App和H5下，可在pages.json中配置titleNView下的type为transparent，<a href="https://uniapp.dcloud.io/collocation/pages?id=app-titlenview" target="_blank" rel="noreferrer">参考</a>。</li><li>如果需要滚动吸顶固定某些元素，推荐使用css的粘性布局，参考<a href="https://ext.dcloud.net.cn/plugin?id=715" target="_blank" rel="noreferrer">插件市场</a>。插件市场也有其他js实现的吸顶插件，但性能不佳，需要时可自行搜索。</li><li>在App、微信小程序、H5中，也可以使用wxs监听滚动，<a href="https://uniapp.dcloud.io/tutorial/miniprogram-subject#wxs" target="_blank" rel="noreferrer">参考</a>；在app-nvue中，可以使用bindingx监听滚动，<a href="https://uniapp.dcloud.io/tutorial/nvue-api#nvue-%E9%87%8C%E4%BD%BF%E7%94%A8-bindingx" target="_blank" rel="noreferrer">参考</a>。</li><li><code>onBackPress</code>上不可使用<code>async</code>，会导致无法阻止默认返回</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">onPageScroll</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//nvue暂不支持滚动监听，可用bindingx代替</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">滚动距离为：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre></div><p><code>onTabItemTap</code> 返回的json对象说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>index</td><td>Number</td><td>被点击tabItem的序号，从0开始</td></tr><tr><td>pagePath</td><td>String</td><td>被点击tabItem的页面路径</td></tr><tr><td>text</td><td>String</td><td>被点击tabItem的按钮文字</td></tr></tbody></table><p><strong>注意</strong></p><ul><li>onTabItemTap常用于点击当前tabitem，滚动或刷新当前页面。如果是点击不同的tabitem，一定会触发页面切换。</li><li>如果想在App端实现点击某个tabitem不跳转页面，不能使用onTabItemTap，可以使用<a href="http://www.html5plus.org/doc/zh_cn/nativeobj.html" target="_blank" rel="noreferrer">plus.nativeObj.view</a>放一个区块盖住原先的tabitem，并拦截点击事件。</li><li>支付宝小程序平台onTabItemTap表现为点击非当前tabitem后触发，因此不能用于实现点击返回顶部这种操作</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">onTabItemTap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e的返回格式为json对象： {&quot;index&quot;:0,&quot;text&quot;:&quot;首页&quot;,&quot;pagePath&quot;:&quot;pages/index/index&quot;}</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre></div><p><code>onNavigationBarButtonTap</code> 参数说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>index</td><td>Number</td><td>原生标题栏按钮数组的下标</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">onNavigationBarButtonTap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// e的返回格式为json对象：{&quot;text&quot;:&quot;测试&quot;,&quot;index&quot;:0}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>onBackPress</code> 回调参数对象说明：</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>from</td><td>String</td><td>触发返回行为的来源：&#39;backbutton&#39;——左上角导航栏按钮及安卓返回键；&#39;navigateBack&#39;——uni.navigateBack() 方法。<strong>支付宝小程序端不支持返回此字段</strong></td></tr></tbody></table><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onBackPress</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">from:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">from</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>注意</strong></p><ul><li>nvue 页面weex编译模式支持的生命周期同weex，具体参考：<a href="https://uniapp.dcloud.io/tutorial/nvue-outline?id=%e7%bc%96%e8%af%91%e6%a8%a1%e5%bc%8f" target="_blank" rel="noreferrer">weex生命周期介绍</a>。</li><li>支付宝小程序真机可以监听到非<code>navigateBack</code>引发的返回事件（使用小程序开发工具时不会触发<code>onBackPress</code>），不可以阻止默认返回行为</li></ul><h2 id="组件生命周期-componentlifecycle" tabindex="-1">组件生命周期@componentlifecycle <a class="header-anchor" href="#组件生命周期-componentlifecycle" aria-label="Permalink to &quot;组件生命周期@componentlifecycle&quot;">​</a></h2><p><code>uni-app</code> 组件支持的生命周期，与vue标准组件的生命周期相同。这里没有页面级的onLoad等生命周期：</p><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th><th style="text-align:left;">最低版本</th></tr></thead><tbody><tr><td style="text-align:left;">beforeCreate</td><td style="text-align:left;">在实例初始化之前被调用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeCreate" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">created</td><td style="text-align:left;">在实例创建完成后被立即调用。<a href="https://v2.cn.vuejs.org/v2/api/#created" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeMount</td><td style="text-align:left;">在挂载开始之前被调用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeMount" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">mounted</td><td style="text-align:left;">挂载到实例上去之后调用。<a href="https://v2.cn.vuejs.org/v2/api/#mounted" target="_blank" rel="noreferrer">详见</a> 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用<code>$nextTick</code><a href="https://v2.cn.vuejs.org/v2/api/#vm-nextTick" target="_blank" rel="noreferrer">Vue官方文档</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeUpdate</td><td style="text-align:left;">数据更新时调用，发生在虚拟 DOM 打补丁之前。<a href="https://v2.cn.vuejs.org/v2/api/#beforeUpdate" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;">仅H5平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">updated</td><td style="text-align:left;">由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。<a href="https://v2.cn.vuejs.org/v2/api/#updated" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;">仅H5平台支持</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">beforeDestroy</td><td style="text-align:left;">实例销毁之前调用。在这一步，实例仍然完全可用。<a href="https://v2.cn.vuejs.org/v2/api/#beforeDestroy" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">destroyed</td><td style="text-align:left;">Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。<a href="https://v2.cn.vuejs.org/v2/api/#destroyed" target="_blank" rel="noreferrer">详见</a></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="页面调用接口" tabindex="-1">页面调用接口 <a class="header-anchor" href="#页面调用接口" aria-label="Permalink to &quot;页面调用接口&quot;">​</a></h2><h3 id="getapp" tabindex="-1">getApp() <a class="header-anchor" href="#getapp" aria-label="Permalink to &quot;getApp()&quot;">​</a></h3><p><code>getApp()</code> 函数用于获取当前应用实例，一般用于获取globalData 。</p><p><strong>实例</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getApp</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">globalData)</span></span>
<span class="line"></span></code></pre></div><p><strong>注意：</strong></p><ul><li>不要在定义于 <code>App()</code> 内的函数中，或调用 <code>App</code> 前调用 <code>getApp()</code> ，可以通过 <code>this.$scope</code> 获取对应的app实例</li><li>通过 <code>getApp()</code> 获取实例之后，不要私自调用生命周期函数。</li><li>当在首页<code>nvue</code>中使用<code>getApp()</code>不一定可以获取真正的<code>App</code>对象。对此提供了<code>const app = getApp({allowDefault: true})</code>用来获取原始的<code>App</code>对象，可以用来在首页对<code>globalData</code>等初始化</li></ul><h3 id="getcurrentpages" tabindex="-1">getCurrentPages() <a class="header-anchor" href="#getcurrentpages" aria-label="Permalink to &quot;getCurrentPages()&quot;">​</a></h3><p><code>getCurrentPages()</code> 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。</p><p><strong>注意：</strong> <code>getCurrentPages()</code>仅用于展示页面栈的情况，请勿修改页面栈，以免造成页面状态错误。</p><p>每个页面实例的方法属性列表：</p><table><thead><tr><th>方法</th><th>描述</th><th>平台说明</th></tr></thead><tbody><tr><td>page.$getAppWebview()</td><td>获取当前页面的webview对象实例</td><td>App</td></tr><tr><td>page.route</td><td>获取当前页面的路由</td><td> </td></tr></tbody></table><p>Tips：</p><ul><li><code>navigateTo</code>, <code>redirectTo</code> 只能打开非 tabBar 页面。</li><li><code>switchTab</code> 只能打开 <code>tabBar</code> 页面。</li><li><code>reLaunch</code> 可以打开任意页面。</li><li>页面底部的 <code>tabBar</code> 由页面决定，即只要是定义为 <code>tabBar</code> 的页面，底部都有 <code>tabBar</code>。</li><li>不能在 <code>App.vue</code> 里面进行页面跳转。</li></ul><h3 id="getappwebview-getappwebview" tabindex="-1">$getAppWebview() @getappwebview <a class="header-anchor" href="#getappwebview-getappwebview" aria-label="Permalink to &quot;$getAppWebview() @getappwebview&quot;">​</a></h3><p><code>uni-app</code> 在 <code>getCurrentPages()</code>获得的页面里内置了一个方法 <code>$getAppWebview()</code> 可以得到当前webview的对象实例，从而实现对 webview 更强大的控制。在 html5Plus 中，plus.webview具有强大的控制能力，可参考：<a href="http://www.html5plus.org/doc/zh_cn/webview.html#plus.webview.WebviewObject" target="_blank" rel="noreferrer">WebviewObject</a>。</p><p>但<code>uni-app</code>框架有自己的窗口管理机制，请不要自己创建和销毁webview，如有需求覆盖子窗体上去，请使用<a href="/leo-docs/api/window/subNVues.html">原生子窗体subNvue</a>。</p><p><strong>注意：此方法仅 App 支持</strong></p><p><strong>示例：</strong></p><p>获取当前页面 webview 的对象实例</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">onLoad</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">currentWebview</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$scope</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$getAppWebview</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//此对象相当于html5plus里的plus.webview.currentWebview()。在uni-app里vue页面直接使用plus.webview.currentWebview()无效</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">currentWebview</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setBounce</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">position</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">top</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">100px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;">changeoffset</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">top</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//动态重设bounce效果</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// #endif</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>获取指定页面 webview 的对象实例</p><p><code>getCurrentPages()</code>可以得到所有页面对象，然后根据数组，可以取指定的页面webview对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> pages </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getCurrentPages</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> page </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pages[pages</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// #ifdef APP-PLUS</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> currentWebview </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$getAppWebview</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(currentWebview</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//获得当前webview的id</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(currentWebview</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isVisible</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//查询当前webview是否可见</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// #endif</span></span>
<span class="line"></span></code></pre></div><p>uni-app自带的web-view组件，是页面中新插入的一个子webview。获取该对象的方法见：<a href="https://ask.dcloud.net.cn/article/35036" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/article/35036</a></p><h2 id="页面通讯" tabindex="-1">页面通讯 <a class="header-anchor" href="#页面通讯" aria-label="Permalink to &quot;页面通讯&quot;">​</a></h2><h3 id="uni-emit-eventname-object-emit" tabindex="-1">uni.$emit(eventName,OBJECT) @emit <a class="header-anchor" href="#uni-emit-eventname-object-emit" aria-label="Permalink to &quot;uni.$emit(eventName,OBJECT) @emit&quot;">​</a></h3><p>触发全局的自定义事件。附加参数都会传给监听器回调。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>OBJECT</td><td>Object</td><td>触发事件携带的附加参数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">update</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,{</span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">页面更新</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="uni-on-eventname-callback-on" tabindex="-1">uni.$on(eventName,callback) @on <a class="header-anchor" href="#uni-on-eventname-callback-on" aria-label="Permalink to &quot;uni.$on(eventName,callback) @on&quot;">​</a></h3><p>监听全局的自定义事件。事件可以由 uni.$emit 触发，回调函数会接收所有传入事件触发函数的额外参数。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">update</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">监听到事件来自 update ，携带参数 msg 为：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="uni-once-eventname-callback-once" tabindex="-1">uni.$once(eventName,callback) @once <a class="header-anchor" href="#uni-once-eventname-callback-once" aria-label="Permalink to &quot;uni.$once(eventName,callback) @once&quot;">​</a></h3><p>监听全局的自定义事件。事件可以由 uni.$emit 触发，但是只触发一次，在第一次触发之后移除监听器。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>String</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$once</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">update</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">监听到事件来自 update ，携带参数 msg 为：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="uni-off-eventname-callback-off" tabindex="-1">uni.$off([eventName, callback]) @off <a class="header-anchor" href="#uni-off-eventname-callback-off" aria-label="Permalink to &quot;uni.$off([eventName, callback]) @off&quot;">​</a></h3><p>移除全局自定义事件监听器。</p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>eventName</td><td>Array＜String＞</td><td>事件名</td></tr><tr><td>callback</td><td>Function</td><td>事件的回调函数</td></tr></tbody></table><p><strong>Tips</strong></p><ul><li>如果没有提供参数，则移除所有的事件监听器；</li><li>如果只提供了事件，则移除该事件所有的监听器；</li><li>如果同时提供了事件与回调，则只移除这个回调的监听器；</li><li>提供的回调必须跟$on的回调为同一个才能移除这个回调的监听器；</li></ul><p><strong>代码示例</strong></p><p><code>$emit</code>、<code>$on</code>、<code>$off</code>常用于跨页面、跨组件通讯，这里为了方便演示放在同一个页面</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{val}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comunicationOff</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">结束监听</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        val</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">onLoad</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">setInterval</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">add</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">add</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">add</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">comunicationOff</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$off</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">add</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">add</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> column</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">data</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><strong>注意事项</strong></p><ul><li>uni.$emit、 uni.$on 、 uni.$once 、uni.$off 触发的事件都是 App 全局级别的，跨任意组件，页面，nvue，vue 等</li><li>使用时，注意及时销毁事件监听，比如，页面 onLoad 里边 uni.$on 注册监听，onUnload 里边 uni.$off 移除，或者一次性的事件，直接使用 uni.$once 监听</li></ul><p>扩展阅读：</p><ul><li><a href="https://ask.dcloud.net.cn/article/36010" target="_blank" rel="noreferrer">如何使用uni.$emit()和uni.$on() 进行页面间通讯</a></li></ul><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><p><code>uni-app</code>页面路由为框架统一管理，开发者需要在<a href="/leo-docs/collocation/pages.html?id=pages">pages.json</a>里配置每个路由页面的路径及页面样式。类似小程序在 app.json 中配置页面路由一样。所以 <code>uni-app</code> 的路由用法与 <code>Vue Router</code> 不同，如仍希望采用 <code>Vue Router</code> 方式管理路由，可在插件市场搜索 <a href="https://ext.dcloud.net.cn/search?q=vue-router" target="_blank" rel="noreferrer">Vue-Router</a>。</p><h3 id="路由跳转" tabindex="-1">路由跳转 <a class="header-anchor" href="#路由跳转" aria-label="Permalink to &quot;路由跳转&quot;">​</a></h3><p><code>uni-app</code> 有两种页面路由跳转方式：使用<a href="/leo-docs/component/navigator.html">navigator</a>组件跳转、调用<a href="/leo-docs/api/router.html">API</a>跳转。</p><h2 id="页面栈" tabindex="-1">页面栈 <a class="header-anchor" href="#页面栈" aria-label="Permalink to &quot;页面栈&quot;">​</a></h2><p>框架以栈的形式管理当前所有页面， 当发生路由切换的时候，页面栈的表现如下：</p><table><thead><tr><th>路由方式</th><th>页面栈表现</th><th>触发时机</th></tr></thead><tbody><tr><td>初始化</td><td>新页面入栈</td><td>uni-app 打开的第一个页面</td></tr><tr><td>打开新页面</td><td>新页面入栈</td><td>调用 API   <a href="/leo-docs/api/router.html?id=navigateto">uni.navigateTo</a>  、使用组件  <a href="/component/navigator?id=navigator">&lt;navigator open-type=&quot;navigate&quot;/&gt;</a></td></tr><tr><td>页面重定向</td><td>当前页面出栈，新页面入栈</td><td>调用 API   <a href="/leo-docs/api/router.html?id=redirectto">uni.redirectTo</a>  、使用组件  <a href="/component/navigator?id=navigator">&lt;navigator open-type=&quot;redirectTo&quot;/&gt;</a></td></tr><tr><td>页面返回</td><td>页面不断出栈，直到目标返回页</td><td>调用 API  <a href="/leo-docs/api/router.html?id=navigateback">uni.navigateBack</a>   、使用组件 <a href="/component/navigator?id=navigator">&lt;navigator open-type=&quot;navigateBack&quot;/&gt;</a> 、用户按左上角返回按钮、安卓用户点击物理back按键</td></tr><tr><td>Tab 切换</td><td>页面全部出栈，只留下新的 Tab 页面</td><td>调用 API  <a href="/leo-docs/api/router.html?id=switchtab">uni.switchTab</a>  、使用组件  <a href="/component/navigator?id=navigator">&lt;navigator open-type=&quot;switchTab&quot;/&gt;</a>  、用户切换 Tab</td></tr><tr><td>重加载</td><td>页面全部出栈，只留下新的页面</td><td>调用 API  <a href="/leo-docs/api/router.html?id=relaunch">uni.reLaunch</a>  、使用组件  <a href="/component/navigator?id=navigator">&lt;navigator open-type=&quot;reLaunch&quot;/&gt;</a></td></tr></tbody></table><h2 id="页面代码规范介绍-template-block" tabindex="-1">页面代码规范介绍 @template-block <a class="header-anchor" href="#页面代码规范介绍-template-block" aria-label="Permalink to &quot;页面代码规范介绍 @template-block&quot;">​</a></h2><p><code>uni-app</code> 支持在 template 模板中嵌套 <code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code>，用来进行 <a href="/leo-docs/tutorial/vue-basics.html?id=listrendering">列表渲染</a> 和 <a href="/leo-docs/tutorial/vue-basics.html?id=condition">条件渲染</a>。</p><p><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code> 并不是一个组件，它们仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。</p><p><code>&lt;block/&gt;</code> 在不同的平台表现存在一定差异，推荐统一使用 <code>&lt;template/&gt;</code>。</p><p><strong>代码示例</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">test 为 true 时显示</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-else</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">test 为 false 时显示</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">block</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(item,index) in list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{item}} - {{index}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">block</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,105),o=[e];function p(c,r,i,y,d,D){return t(),a("div",null,o)}const g=s(l,[["render",p]]);export{C as __pageData,g as default};
