import{_ as t,c as e,o as s,N as a}from"./chunks/framework.fc67cb9d.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/preload-page.md","lastUpdated":1685603474000}'),n={name:"api/preload-page.md"},l=a(`<h4 id="uni-preloadpage-object" tabindex="-1">uni.preloadPage(OBJECT) <a class="header-anchor" href="#uni-preloadpage-object" aria-label="Permalink to &quot;uni.preloadPage(OBJECT)&quot;">​</a></h4><p>预加载页面，是一种性能优化技术。被预载的页面，在打开时速度更快。</p><p><strong>平台差异说明</strong></p><table><thead><tr><th style="text-align:center;">App-nvue</th><th style="text-align:center;">H5</th><th style="text-align:center;">微信小程序</th><th style="text-align:center;">支付宝小程序</th><th style="text-align:center;">百度小程序</th><th style="text-align:center;">字节跳动小程序、飞书小程序</th><th style="text-align:center;">QQ小程序</th></tr></thead><tbody><tr><td style="text-align:center;">√(2.7.12+)</td><td style="text-align:center;">√(2.7.12+)</td><td style="text-align:center;">x</td><td style="text-align:center;">x</td><td style="text-align:center;">x</td><td style="text-align:center;">x</td><td style="text-align:center;">x</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">url</td><td style="text-align:center;">string</td><td style="text-align:center;">是</td><td style="text-align:center;">预加载页面url</td></tr><tr><td style="text-align:center;">success</td><td style="text-align:center;">Function</td><td style="text-align:center;">否</td><td style="text-align:center;">预加载成功完成回调</td></tr><tr><td style="text-align:center;">fail</td><td style="text-align:center;">Function</td><td style="text-align:center;">否</td><td style="text-align:center;">预加载失败回调</td></tr><tr><td style="text-align:center;">complete</td><td style="text-align:center;">Function</td><td style="text-align:center;">否</td><td style="text-align:center;">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h4 id="h5-平台" tabindex="-1">H5 平台 <a class="header-anchor" href="#h5-平台" aria-label="Permalink to &quot;H5 平台&quot;">​</a></h4><p>预加载 /pages/test/test 对应的js文件，不执行页面预渲染逻辑</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">preloadPage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/pages/test/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h4 id="app-nvue-平台" tabindex="-1">App-nvue 平台 <a class="header-anchor" href="#app-nvue-平台" aria-label="Permalink to &quot;App-nvue 平台&quot;">​</a></h4><p>预加载nvue页面 /pages/test/test</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">preloadPage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/pages/test/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>注意事项</p><ol><li>App平台仅支持预加载 nvue 页面，执行页面预渲染，预载时触发生命周期 <code>onLoad</code>，<code>onReady</code>，不触发 <code>onShow</code></li><li>打开新页面时，url 完全相同（包含参数）时，优先使用预加载页面，触发生命周期 onShow</li><li>tabbar页面，仅支持预加载尚未显示过的页面，否则返回 fail，提示 already exists</li><li>同一时间，相同 url 仅 preloadPage 一次</li><li>当同一个预载页面已被打开(在路由栈)，再次打开相同url时，不再使用该预加载页面，而是打开新的非预载页面</li><li><code>uni.reLanuch</code>, <code>uni.switchTab</code>, <code>uni.navigateBack</code>(含Android返回键) 切换页面时，预加载页面不会被销毁，仅触发生命周期 <code>onHide</code></li><li>在预载页面使用 <code>uni.redirectTo</code> 时，预加载页面会被销毁，触发生命周期 <code>onUnload</code></li></ol><p>示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">preloadPage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/pages/test/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 预加载 /pages/test/test 页面（仅触发onLoad，onReady)</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/pages/test/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// url匹配，跳转预加载页面（仅触发onShow)</span></span>
<span class="line"><span style="color:#A6ACCD;">uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateTo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/pages/test/test?a=b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// url不匹配，正常打开新页面</span></span>
<span class="line"></span></code></pre></div><p>HBuilderX 2.7.12+的hello uni-app，在navigator示例和uni ui的日历示例中增加了页面预载示例。</p><h4 id="uni-unpreloadpage-object" tabindex="-1">uni.unPreloadPage(OBJECT) <a class="header-anchor" href="#uni-unpreloadpage-object" aria-label="Permalink to &quot;uni.unPreloadPage(OBJECT)&quot;">​</a></h4><p>取消预载页面。</p><ol><li>仅App-nvue支持</li><li>当预载页面未被打开时，使用 <code>unPreloadPage</code>时会销毁该页面，触发生命周期 <code>onUnload</code></li><li>当预载页面已被打开时，使用 <code>unPreloadPage</code>时不销毁该页面，但该预加载页面不再继续存在，会随着路由变化而销毁</li></ol>`,19),o=[l];function p(r,c,i,d,y,D){return s(),e("div",null,o)}const g=t(n,[["render",p]]);export{u as __pageData,g as default};
