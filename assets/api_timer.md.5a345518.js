import{_ as t,c as e,o as l,N as a}from"./chunks/framework.fc67cb9d.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/timer.md","lastUpdated":1685603474000}'),s={name:"api/timer.md"},n=a(`<h2 id="settimeout-callback-delay-rest" tabindex="-1">setTimeout(callback, delay, rest) <a class="header-anchor" href="#settimeout-callback-delay-rest" aria-label="Permalink to &quot;setTimeout(callback, delay, rest)&quot;">​</a></h2><p>设定一个定时器。在定时到期以后执行注册的回调函数</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">callback</td><td style="text-align:left;">Function</td><td style="text-align:left;">是</td><td style="text-align:left;">回调函数</td></tr><tr><td style="text-align:left;">delay</td><td style="text-align:left;">Number</td><td style="text-align:left;">否</td><td style="text-align:left;">延迟的时间，函数的调用会在该延迟之后发生，单位 ms</td></tr><tr><td style="text-align:left;">rest</td><td style="text-align:left;">Any</td><td style="text-align:left;">否</td><td style="text-align:left;">param1, param2, ..., paramN 等附加参数，它们会作为参数传递给回调函数</td></tr></tbody></table><p><strong>返回值</strong></p><table><thead><tr><th style="text-align:left;">返回值</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">timeoutID</td><td style="text-align:left;">Number</td><td style="text-align:left;">定时器的编号，这个值可以传递给 <a href="/leo-docs/api/timer.html?id=cleartimeout">clearTimeout</a> 来取消该定时</td></tr></tbody></table><h2 id="cleartimeout-timeoutid" tabindex="-1">clearTimeout(timeoutID) <a class="header-anchor" href="#cleartimeout-timeoutid" aria-label="Permalink to &quot;clearTimeout(timeoutID)&quot;">​</a></h2><p>取消由 setTimeout 设置的定时器。</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">timeoutID</td><td style="text-align:left;">Number</td><td style="text-align:left;">是</td><td style="text-align:left;">要取消的定时器的 ID</td></tr></tbody></table><h2 id="setinterval-callback-delay-rest" tabindex="-1">setInterval(callback, delay, rest) <a class="header-anchor" href="#setinterval-callback-delay-rest" aria-label="Permalink to &quot;setInterval(callback, delay, rest)&quot;">​</a></h2><p>设定一个定时器。按照指定的周期（以毫秒计）来执行注册的回调函数</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">callback</td><td style="text-align:left;">Function</td><td style="text-align:left;">是</td><td style="text-align:left;">回调函数</td></tr><tr><td style="text-align:left;">delay</td><td style="text-align:left;">Number</td><td style="text-align:left;">否</td><td style="text-align:left;">执行回调函数之间的时间间隔，单位 ms</td></tr><tr><td style="text-align:left;">rest</td><td style="text-align:left;">Any</td><td style="text-align:left;">否</td><td style="text-align:left;">param1, param2, ..., paramN 等附加参数，它们会作为参数传递给回调函数</td></tr></tbody></table><p><strong>返回值</strong></p><table><thead><tr><th style="text-align:left;">返回值</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">intervalID</td><td style="text-align:left;">Number</td><td style="text-align:left;">定时器的编号，这个值可以传递给 <a href="/leo-docs/api/timer.html?id=clearinterval">clearInterval</a> 来取消该定时</td></tr></tbody></table><p><strong>代码示例</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">this.timer = setInterval(() =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    //TODO </span></span>
<span class="line"><span style="color:#A6ACCD;">}, 1000);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="clearinterval-intervalid" tabindex="-1">clearInterval(intervalID) <a class="header-anchor" href="#clearinterval-intervalid" aria-label="Permalink to &quot;clearInterval(intervalID)&quot;">​</a></h2><p>取消由 setInterval 设置的定时器。</p><p><strong>参数说明</strong></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">intervalID</td><td style="text-align:left;">Number</td><td style="text-align:left;">是</td><td style="text-align:left;">要取消的定时器的 ID</td></tr></tbody></table><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>App 端返回的定时器编号可能为 String 类型，使用时无需主动转换为 Number 类型</li></ul>`,24),r=[n];function i(d,o,h,y,g,c){return l(),e("div",null,r)}const x=t(s,[["render",i]]);export{p as __pageData,x as default};
