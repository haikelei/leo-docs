import{_ as s,c as a,o as n,N as l}from"./chunks/framework.fc67cb9d.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/appvue-config.md","lastUpdated":1685603474000}'),t={name:"guide/appvue-config.md"},e=l(`<p><code>App.vue</code>是uni-app的主组件，所有页面都是在<code>App.vue</code>下进行切换的，是页面入口文件。但<code>App.vue</code>本身不是页面，这里不能编写视图元素，也就是没有<code>&lt;template&gt;</code>。</p><p>这个文件的作用包括：调用应用生命周期函数、配置全局样式、配置全局的存储globalData</p><p>应用生命周期仅可在<code>App.vue</code>中监听，在页面监听无效。</p><h2 id="应用生命周期-applifecycle" tabindex="-1">应用生命周期@applifecycle <a class="header-anchor" href="#应用生命周期-applifecycle" aria-label="Permalink to &quot;应用生命周期@applifecycle&quot;">​</a></h2><p><code>uni-app</code> 支持如下应用生命周期函数：</p><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">onLaunch</td><td style="text-align:left;">当<code>uni-app</code> 初始化完成时触发（全局只触发一次）</td></tr><tr><td style="text-align:left;">onShow</td><td style="text-align:left;">当 <code>uni-app</code> 启动，或从后台进入前台显示</td></tr><tr><td style="text-align:left;">onHide</td><td style="text-align:left;">当 <code>uni-app</code> 从前台进入后台</td></tr><tr><td style="text-align:left;">onError</td><td style="text-align:left;">当 <code>uni-app</code> 报错时触发</td></tr><tr><td style="text-align:left;">onUniNViewMessage</td><td style="text-align:left;">对 <code>nvue</code> 页面发送的数据进行监听，可参考 <a href="https://uniapp.dcloud.io/tutorial/nvue-api?id=communication" target="_blank" rel="noreferrer">nvue 向 vue 通讯</a></td></tr><tr><td style="text-align:left;">onUnhandledRejection</td><td style="text-align:left;">对未处理的 Promise 拒绝事件监听函数（2.8.1+）</td></tr><tr><td style="text-align:left;">onPageNotFound</td><td style="text-align:left;">页面不存在监听函数</td></tr><tr><td style="text-align:left;">onThemeChange</td><td style="text-align:left;">监听系统主题变化</td></tr></tbody></table><p><strong>示例代码</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// 只能在App.vue里监听应用的生命周期</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">onLaunch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App Launch</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">onShow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App Show</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">onHide</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App Hide</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>注意</strong></p><ul><li><strong>应用生命周期仅可在<code>App.vue</code>中监听，在其它页面监听无效</strong>。</li><li>以组合式 API 使用时，在 Vue2 和 Vue3 中存在一定区别，请分别参考：<a href="/leo-docs/tutorial/vue-composition-api.html">Vue2 组合式 API 使用文档</a> 和 <a href="/leo-docs/tutorial/vue3-composition-api.html">Vue3 组合式 API 使用文档</a>。</li><li>应用启动参数，可以在API <code>uni.getLaunchOptionsSync</code>获取，<a href="https://uniapp.dcloud.net.cn/api/plugins/getLaunchOptionsSync.html#getlaunchoptionssync" target="_blank" rel="noreferrer">详见</a></li><li>onlaunch里进行页面跳转，如遇白屏报错，请参考<a href="https://ask.dcloud.net.cn/article/35942" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/article/35942</a></li><li><code>App.vue</code> 不能写模板</li><li>onPageNotFound 页面实际上已经打开了（比如通过分享卡片、小程序码）且发现页面不存在，才会触发，api 跳转不存在的页面不会触发（如 uni.navigateTo）</li></ul><h2 id="globaldata" tabindex="-1">globalData <a class="header-anchor" href="#globaldata" aria-label="Permalink to &quot;globalData&quot;">​</a></h2><p>小程序有globalData，这是一种简单的全局变量机制。这套机制在uni-app里也可以使用，并且全端通用。</p><p><strong>以下是 App.vue 中定义globalData的相关配置：</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">globalData</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;  </span></span>
<span class="line"></span></code></pre></div><p>js中操作globalData的方式如下： <code>getApp().globalData.text = &#39;test&#39;</code></p><p>在应用onLaunch时，getApp对象还未获取，暂时可以使用this.globalData获取globalData。</p><p>如果需要把globalData的数据绑定到页面上，可在页面的onShow页面生命周期里进行变量重赋值。</p><p>nvue的weex编译模式中使用globalData的话，由于weex生命周期不支持onShow，但熟悉5+的话，可利用监听webview的addEventListener show事件实现onShow效果，或者直接使用weex生命周期中的beforeCreate。但建议开发者使用uni-app编译模式，而不是weex编译模式。</p><p>globalData是简单的全局变量，如果使用状态管理，请使用<code>vuex</code>（main.js中定义）</p><h2 id="全局样式" tabindex="-1">全局样式 <a class="header-anchor" href="#全局样式" aria-label="Permalink to &quot;全局样式&quot;">​</a></h2><p>在<code>App.vue</code>中，可以定义一些全局通用样式，例如需要加一个通用的背景色，首屏页面渲染的动画等都可以写在App.vue中。</p><p>注意如果工程下同时有vue和nvue文件，全局样式的所有css会应用于所有文件，而nvue支持的css有限，编译器会在控制台报警，提示某些css无法在nvue中支持。此时需要把nvue不支持的css写在单独的条件编译里。如：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* #ifndef APP-PLUS-NVUE */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./common/uni.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* #endif*/</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,23),p=[e];function o(c,r,i,y,D,F){return n(),a("div",null,p)}const u=s(t,[["render",o]]);export{A as __pageData,u as default};
