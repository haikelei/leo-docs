import{_ as e,c as t,o,N as c}from"./chunks/framework.fc67cb9d.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"component/cover-view.md","lastUpdated":1685603474000}'),l={name:"component/cover-view.md"},i=c('<h3 id="cover-view" tabindex="-1">cover-view <a class="header-anchor" href="#cover-view" aria-label="Permalink to &quot;cover-view&quot;">​</a></h3><p>覆盖在原生组件上的文本视图。</p><p>app-vue和小程序框架，渲染引擎是webview的。但为了优化体验，部分组件如map、video、textarea、canvas通过原生控件实现，原生组件层级高于前端组件（类似flash层级高于div）。为了能正常覆盖原生组件，设计了cover-view。</p><p><strong>平台差异说明</strong></p><table><thead><tr><th style="text-align:center;">App</th><th style="text-align:center;">H5</th><th style="text-align:center;">微信小程序</th><th style="text-align:center;">支付宝小程序</th><th style="text-align:center;">百度小程序</th><th style="text-align:center;">字节跳动小程序、飞书小程序</th><th style="text-align:center;">QQ小程序</th><th style="text-align:center;">快应用</th><th style="text-align:center;">360小程序</th><th style="text-align:center;">快手小程序</th><th style="text-align:center;">京东小程序</th></tr></thead><tbody><tr><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">x</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">x</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td></tr></tbody></table><p>支持的事件：<code>click</code></p><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th><th style="text-align:left;">平台差异说明</th></tr></thead><tbody><tr><td style="text-align:left;">scroll-top</td><td style="text-align:left;">number/string</td><td style="text-align:left;"></td><td style="text-align:left;">设置顶部滚动偏移量，仅在设置了 overflow-y: scroll 成为滚动元素后生效</td><td style="text-align:left;">支付宝小程序不支持</td></tr></tbody></table><p><strong>Tips</strong></p><ul><li>app-nvue所有组件均为原生渲染，不存在前端组件无法覆盖原生组件的问题。但为了保持多端兼容，nvue里也实现了<code>cover-view</code>，作用与普通<code>view</code>一样。</li><li>在App端，如果重度使用video和map，推荐使用nvue页面。</li><li>cover-view 嵌套使用时，内部不可直接写文本节点，需要使用 cover-view 包裹。</li><li>App端还可以使用plus.nativeObj.view绘制原生内容，参考:<a href="https://ask.dcloud.net.cn/article/35036" target="_blank" rel="noreferrer">uni-app中使用5+界面控件</a>、<a href="https://www.html5plus.org/doc/zh_cn/nativeobj.html#plus.nativeObj.View" target="_blank" rel="noreferrer">plus.nativeObj.view规范</a></li><li>App端还提供了更灵活和强大的<code>subNvue</code>，参考<a href="/leo-docs/api/window/subNVues.html">原生子窗体subNvue</a></li><li>在 video 组件中使用时，若想在全屏模式下使用<code>cover-view</code>，只有在微信小程序、App端的nvue页面可实现。</li><li>微信小程序部分原生组件实现了同层渲染，在指定的基础库版本上，某些原生组件可无需使用<code>cover-view</code>覆盖，<a href="https://developers.weixin.qq.com/miniprogram/dev/component/native-component.html" target="_blank" rel="noreferrer">详见</a></li><li>百度小程序iOS端暂不支持一个页面有多个video时嵌套<code>cover-view</code>，<a href="https://smartprogram.baidu.com/docs/develop/component/view_cover-view/" target="_blank" rel="noreferrer">详见</a>。</li><li>支付宝小程序中 <code>cover-view</code> 不支持嵌套，<a href="https://opendocs.alipay.com/mini/component/cover-view" target="_blank" rel="noreferrer">详见</a>。</li><li>字节跳动小程序不需要<code>cover-view</code>，因其原生组件均实现了同层渲染。</li><li>360小程序不存在原生组件，无此概念。</li><li>cover-view使用注意：京东小程序<a href="https://mp-docs.jd.com/doc/dev/component/548" target="_blank" rel="noreferrer">详见</a>、快手小程序<a href="https://mp.kuaishou.com/docs/develop/components/view/cover-view.html" target="_blank" rel="noreferrer">详见</a>、QQ小程序<a href="https://q.qq.com/wiki/develop/miniprogram/component/view-container/cover.html#cover-view" target="_blank" rel="noreferrer">详见</a> 。</li></ul><p><strong>微信小程序的cover-view使用注意：</strong></p><ul><li>cover-view和cover-image的<code>aria-role</code>仅可设置为<code>button</code>，读屏模式下才可以点击，并朗读出“按钮”；为空时可以聚焦，但不可点击。</li><li>基础库 2.2.4 起支持 <code>touch</code> 相关事件，也可使用 <code>hover-class</code> 设置点击态。</li><li>基础库 2.1.0 起支持设置 <code>scale</code> <code>rotate</code> 的 css 样式，包括 <code>transition</code> 动画。</li><li>基础库 1.9.90 起 <code>cover-view</code> 支持 <code>overflow: scroll</code>，但不支持动态更新 <code>overflow</code>。</li><li>基础库 1.9.90 起最外层 <code>cover-view</code> 支持 <code>position: fixed</code>。</li><li>基础库 1.9.0 起支持插在 view 等标签下。在此之前只可嵌套在原生组件<code>map</code>、<code>video</code>、<code>canvas</code>、<code>camera</code>内，避免嵌套在其他组件内。</li><li>基础库 1.6.0 起支持css <code>transition</code>动画，<code>transition-property</code>只支持<code>transform (translateX, translateY)</code>与<code>opacity</code>。</li><li>基础库 1.6.0 起支持css <code>opacity</code>。</li><li>事件模型遵循冒泡模型，但不会冒泡到原生组件。</li><li>文本建议都套上<code>cover-view</code>标签，避免排版错误。</li><li>只支持基本的定位、布局、文本样式。不支持设置单边的<code>border</code>、<code>background-image</code>、<code>shadow</code>、<code>overflow: visible</code>等。</li><li>建议子节点不要溢出父节点。</li><li>支持使用 <code>z-index</code> 控制层级。</li><li>默认设置的样式有：<code>white-space: nowrap</code>; <code>line-height: 1.2</code>; <code>display: block</code>;</li><li>自定义组件嵌套 <code>cover-view</code> 时，自定义组件的 <code>slot</code> 及其父节点暂不支持通过 <code>wx:if</code> 控制显隐，否则会导致 <code>cover-view</code> 不显示。</li></ul>',11),r=[i];function d(a,n,s,v,p,h){return o(),t("div",null,r)}const m=e(l,[["render",d]]);export{w as __pageData,m as default};
